#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    bytecblock "bid"
    txn ApplicationID
    bnz main_after_if_else@2
    // smart_contracts/hello_world/contract.algo.ts:4
    // highestBid = GlobalState<uint64>({ key: "bid", initialValue: 0 })
    bytec_0 // "bid"
    intc_0 // 0
    app_global_put

main_after_if_else@2:
    // smart_contracts/hello_world/contract.algo.ts:3
    // export class Auction extends Contract {
    txn NumAppArgs
    bz main_bare_routing@8
    pushbytes 0x7975aa2e // method "placeBid(uint64)string"
    txna ApplicationArgs 0
    match main_placeBid_route@5

main_after_if_else@12:
    // smart_contracts/hello_world/contract.algo.ts:3
    // export class Auction extends Contract {
    intc_0 // 0
    return

main_placeBid_route@5:
    // smart_contracts/hello_world/contract.algo.ts:6
    // placeBid(amount: uint64): string {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // smart_contracts/hello_world/contract.algo.ts:3
    // export class Auction extends Contract {
    txna ApplicationArgs 1
    btoi
    // smart_contracts/hello_world/contract.algo.ts:6
    // placeBid(amount: uint64): string {
    callsub placeBid
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

main_bare_routing@8:
    // smart_contracts/hello_world/contract.algo.ts:3
    // export class Auction extends Contract {
    txn OnCompletion
    bnz main_after_if_else@12
    txn ApplicationID
    !
    assert // can only call when creating
    intc_1 // 1
    return


// smart_contracts/hello_world/contract.algo.ts::Auction.placeBid(amount: uint64) -> bytes:
placeBid:
    // smart_contracts/hello_world/contract.algo.ts:6
    // placeBid(amount: uint64): string {
    proto 1 1
    // smart_contracts/hello_world/contract.algo.ts:4
    // highestBid = GlobalState<uint64>({ key: "bid", initialValue: 0 })
    intc_0 // 0
    bytec_0 // "bid"
    app_global_get_ex
    assert // check GlobalState exists
    // smart_contracts/hello_world/contract.algo.ts:7
    // if (amount > this.highestBid.value) {
    frame_dig -1
    <
    bz placeBid_after_if_else@2
    // smart_contracts/hello_world/contract.algo.ts:4
    // highestBid = GlobalState<uint64>({ key: "bid", initialValue: 0 })
    bytec_0 // "bid"
    // smart_contracts/hello_world/contract.algo.ts:8
    // this.highestBid.value = amount
    frame_dig -1
    app_global_put
    // smart_contracts/hello_world/contract.algo.ts:9
    // return "new highest bid"
    pushbytes "new highest bid"
    retsub

placeBid_after_if_else@2:
    // smart_contracts/hello_world/contract.algo.ts:11
    // return "bid too low"
    pushbytes "bid too low"
    retsub
